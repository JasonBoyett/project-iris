datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

enum Overlay {
  BLUE
  BLUE_GREY
  GREEN
  GREY
  ORANGE
  PEACH
  PURPLE
  RED
  TURQUOISE
  YELLOW
}

enum Font {
  sans
  serif
  mono
  robotoMono
  rem
  kanit
  preahvihear
  bebasNeue
  chakraPetch
  ibmPlexMono
}

enum Language {
  english
  spanish
}

enum HighlightType {
  fourByOne
  oneByTwo
  twoByTwo
  oneByOne
  twoByOne
}

enum SchulteType {
  three
  five
  seven
}

enum BoxType {
  two
  three
}

model User {
  id                      String                 @id @unique
  createdAt               DateTime               @default(now())
  updatedAt               DateTime               @updatedAt
  firstName               String                 @default("Defaul") @db.VarChar(255)
  lastName                String                 @default("User") @db.VarChar(255)
  maxWpm                  Int                    @default(250) @db.SmallInt
  testSpeed               Int                    @default(230) @db.SmallInt
  currentWpm              Int                    @default(230) @db.SmallInt
  timeTests               TimeTest[]
  shulteSessions          SchulteSession[]
  evenNumberSessions      EvenNumberSession[]
  wordGridFlasherSessions HighlightSession[]
  wordFlasherSessions     WordFlasherSession[]
  LetterMatcherSession    LetterMatcherSession[]
  highlightColor          Overlay                @default(GREY)
  lastSchulteByFive       String                 @default(" ")
  lastSchulteByThree      String                 @default(" ")
  lastSchulteBySeven      String                 @default(" ")
  lastSpeedTest           String                 @default(" ")
  lastFourByOne           String                 @default(" ")
  lastOneByTwo            String                 @default(" ")
  lastTwoByTwo            String                 @default(" ")
  lastOneByOne            String                 @default(" ")
  lastTwoByOne            String                 @default(" ")
  lastEvenNumbers         String                 @default(" ")
  lastCubeByTwo           String                 @default(" ")
  lastCubeByThree         String                 @default(" ")
  lastNumberGuesser       String                 @default(" ")
  lastLetterMatcher       String                 @default(" ")
  numberGuesserFigures    Int                    @default(4)
  font                    Font                   @default(sans)
  isUsingChecklist        Boolean                @default(true)
  isAdmin                 Boolean                @default(false)
  isStudySubject          Boolean                @default(false)
  language                Language               @default(english)
  tested                  Boolean                @default(false)
  NumberGuesserSession    NumberGuesserSession[]
  BoxFlasherSession       BoxFlasherSession[]

  @@index([id])
}

model TimeTest {
  id        String   @unique
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  sessionId String   @id @default(cuid())
  CreatedAt DateTime @default(now())
  highScore Int      @db.SmallInt
  lowScore  Int      @db.SmallInt
  accuracy  Int      @db.SmallInt

  @@index([id])
}

model SchulteSession {
  id         String      @unique
  user       User        @relation(fields: [userId], references: [id])
  type       SchulteType
  time       Int
  errorCount Int         @db.SmallInt
  userId     String      @db.VarChar(255)

  @@index([id])
}

model EvenNumberSession {
  id         String   @unique
  userId     String
  user       User     @relation(fields: [userId], references: [id])
  errorCount Int      @db.SmallInt
  time       Int
  date       DateTime @db.DateTime

  @@index([id])
}

model HighlightSession {
  id     String        @unique
  userId String
  user   User          @relation(fields: [userId], references: [id])
  speed  Int           @db.SmallInt
  date   DateTime      @db.DateTime
  type   HighlightType

  @@index([id])
}

model NumberGuesserSession {
  id             String   @unique
  userId         String
  user           User     @relation(fields: [userId], references: [id])
  numberCorrect  Int
  numberWrong    Int
  longestStreak  Int
  figuresAtStart Int
  figuresAtEnd   Int
  date           DateTime @db.DateTime

  @@index([id])
}

model LetterMatcherSession {
  id             String   @unique
  userId         String
  user           User     @relation(fields: [userId], references: [id])
  numberCorrect  Int
  numberWrong    Int
  date           DateTime @db.DateTime

  @@index([id])
}

model WordFlasherSession {
  id     String   @unique
  userId String
  user   User     @relation(fields: [userId], references: [id])
  speed  Int      @db.SmallInt
  date   DateTime @db.DateTime
  type   String   @db.VarChar(255)

  @@index([id])
}

model BoxFlasherSession {
  id     String   @unique
  userId String
  user   User     @relation(fields: [userId], references: [id])
  speed  Int
  date   DateTime @db.DateTime
  type   BoxType

  @@index([id])
}

model SatPassage {
  id          String        @unique
  passageText String
  questions   SatQuestion[]

  @@index([id])
}

model SatQuestion {
  id            String     @unique
  passageId     String
  passage       SatPassage @relation(fields: [passageId], references: [id])
  question      String
  answerA       String     @db.VarChar(255)
  answerB       String     @db.VarChar(255)
  answerC       String     @db.VarChar(255)
  answerD       String     @db.VarChar(255)
  correctAnswer String     @db.Char(1)

  @@index([id])
}

model SpeedQuestion {
  id            Int    @id @unique
  passage       String @db.Text
  question      String @db.Text
  answerA       String
  answerB       String
  answerC       String
  answerD       String
  correctAnswer String

  @@index([id])
}
