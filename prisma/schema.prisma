datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

enum Overlay {
  BLUE
  BLUE_GREY
  GREEN
  GREY
  ORANGE
  PEACH
  PURPLE
  RED
  TURQUOISE
  YELLOW
}

enum Font {
  sans
  serif
  mono
  robotoMono
  rem
  kanit
  preahvihear
  bebasNeue
  chakraPetch
  ibmPlexMono
}

model User {
  id                      String                   @id @unique 
  createdAt               DateTime                 @default(now())
  updatedAt               DateTime                 @updatedAt
  firstName               String                   @db.VarChar(255)@default("Defaul")
  lastName                String                   @db.VarChar(255)@default("User")
  maxWpm                  Int                      @db.SmallInt
  currentWpm              Int                      @db.SmallInt
  timeTests               TimeTest[]
  shulteSessions          ShulteSession[]
  evenNumberSessions      EvenNumberSession[]
  wordGridFlasherSessions WordGridFlasherSession[]
  wordFlasherSessions     WordFlasherSession[]
  highlightColor          Overlay
  lastSchulteByFive       String                   @default(" ")
  lastSchulteByThree      String                   @default(" ")
  lastSchulteBySeven      String                   @default(" ")
  lastSpeedTest           String                   @default(" ")
  lastFourByOne           String                   @default(" ")
  lastOneByTwo            String                   @default(" ")
  lastTwoByTwo            String                   @default(" ")
  lastOneByOne            String                   @default(" ")
  lastTwoByOne            String                   @default(" ")
  lastEvenNumbers         String                   @default(" ")
  lastCubeByTwo           String                   @default(" ")
  lastCubeByThree         String                   @default(" ")
  font                    Font                     @default(sans)
  isAdmin                 Boolean                  @default(false)

  @@index([id])
}

model TimeTest {
  id        String   @unique
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  sessionId String   @id @default(cuid())
  CreatedAt DateTime @default(now())
  highScore Int      @db.SmallInt
  lowScore  Int      @db.SmallInt
  accuracy  Int      @db.SmallInt

  @@index([id])
}

model ShulteSession {
  id         String   @unique
  user       User     @relation(fields: [userId], references: [id])
  sideLength Int      @db.TinyInt
  startTime  DateTime @db.DateTime
  endTime    DateTime @db.DateTime
  errorCount Int      @db.SmallInt
  userId     String   @db.VarChar(255)

  @@index([id])
}

model EvenNumberSession {
  id            String   @unique
  userId        String
  user          User     @relation(fields: [userId], references: [id])
  errorCount    Int      @db.SmallInt
  numberCleared Int      @db.SmallInt
  date          DateTime @db.DateTime

  @@index([id])
}

model WordGridFlasherSession {
  id     String   @unique
  userId String
  user   User     @relation(fields: [userId], references: [id])
  speed  Int      @db.SmallInt
  date   DateTime @db.DateTime
  type   String   @db.VarChar(255)

  @@index([id])
}

model WordFlasherSession {
  id     String   @unique
  userId String
  user   User     @relation(fields: [userId], references: [id])
  speed  Int      @db.SmallInt
  date   DateTime @db.DateTime
  type   String   @db.VarChar(255)

  @@index([id])
}

model SatPassage {
  id          String        @unique
  passageText String
  questions   SatQuestion[]

  @@index([id])
}

model SatQuestion {
  id            String     @unique
  passageId     String
  passage       SatPassage @relation(fields: [passageId], references: [id])
  question      String
  answerA       String     @db.VarChar(255)
  answerB       String     @db.VarChar(255)
  answerC       String     @db.VarChar(255)
  answerD       String     @db.VarChar(255)
  correctAnswer String     @db.Char(1)

  @@index([id])
}

model SpeedQuestion{
  id            Int        @unique@id@default(autoincrement())
  passage       String     @db.Text
  question      String     @db.Text
  answerA       String     
  answerB       String    
  answerC       String   
  answerD       String  
  correctAnswer String 

  @@index([id])
}

