import { argv0 } from "process";
import React, { MouseEventHandler, ReactElement, SyntheticEvent } from "react";
import {Dispatch, SetStateAction, useEffect, useState, FC} from "react";
import { number } from "zod";

const DEFAULT = "flex text-white text-xl justify-center p-4 bg-gray-500 rounded-md gap-1"
const HILIGHT = 'flex text-white text-xl justify-center p-4 bg-blue-500 rounded-md gap-1'

export type EvenOddProps = {
  segFigs: number;
  numToFind: number;
  height: number;
  width: number;
}

const randomNumber = (segFigs: number, isEven: boolean) =>{
  const min = Math.pow(10, segFigs - 1);
  const max = Math.pow(10, segFigs) - 1;
  const randomNumber = Math.floor(Math.random() * (max - min + 1)) + min;
  if (isEven){
    const newNumber = randomNumber % 2 === 0 ? randomNumber : randomNumber + 1;
    if(newNumber > max){
      return newNumber - 2;
    }
    else if(newNumber < min){
      return newNumber + 2;
    }
    else{
      return newNumber;
    }
  }
  else {
    const newNumber = randomNumber % 2 === 0 ? randomNumber + 1 : randomNumber;
    if(newNumber > max){
      return newNumber - 2;
    }
    else if(newNumber < min){
      return newNumber + 2;
    }
    else{
      return newNumber;
    }
  }
}

const generateNumbers = (props: EvenOddProps) => {
  const count = props.height * props.width;
  const numbers: number[] = [];

  for(let i = 0; i < count; i++){
    numbers.push(randomNumber(props.segFigs, i < props.numToFind ? true: false));
  }
  return numbers.sort(() => Math.random() - 0.5);
}

const handleClick = (event: SyntheticEvent<HTMLDivElement>) => {
  const { id, className } = event.currentTarget as HTMLDivElement
  if(parseInt(event.currentTarget.id, 10) % 2 === 0){
    event.currentTarget.className = HILIGHT;
  }
}

const scan = (event: SyntheticEvent<HTMLDivElement[]>) => {
  let count = 0;
  console.log(event.currentTarget.length)
  for(let i = 0; i < event.currentTarget.length; i++){
    if(event.currentTarget[i]?.className == HILIGHT){
      count ++
    }
  }
  // console.log(count);
}

const generateComponants = (props: EvenOddProps) => {
  const componants: ReactElement[] = [];
  const numbers = generateNumbers(props);

  for(const num of numbers){
    componants.push(React.createElement(
    'div',
    {className: DEFAULT, id: num, onClick: handleClick, key: num.toString()},
    num))
  }
  return componants;
}

const EvensAndOdds = (props: EvenOddProps) => {
  const [grid, setGrid]: [ReactElement[],Dispatch<SetStateAction<ReactElement[]>>] = useState<ReactElement[]>([]);

  useEffect(() => {
    const newGrid = generateComponants(props)
    setGrid(newGrid)
  }, [])

  return React.createElement('div',{className: 'flex grid grid-cols-5 gap-1', onClick: scan}, grid);
}

export default EvensAndOdds;

